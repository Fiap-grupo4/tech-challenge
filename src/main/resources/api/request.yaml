openapi: 3.0.3
info:
  title: Request API
  version: 1.0.0
  description: API for managing requests
  contact:
    name: Gabriel Arrighi Silva
    email: gasilva912@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Local server
  - url: https://api.fiap.com.br/request
    description: Production server
tags:
  - name: Request
    description: Operations related to resquests
paths:
  /request:
    get:
      tags:
        - Request
      summary: List all requests
      operationId: listRequests
      responses:
        "200":
          description: A list of requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Request"
    post:
      tags:
        - Request
      summary: Create a new request
      operationId: createRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequest"
      responses:
        "201":
          description: The request was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
  /request/{requestId}:
    get:
      tags:
        - Request
      summary: Get a request by ID
      operationId: getRequest
      parameters:
        - name: requestId
          in: path
          description: ID of the request to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Request found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
        "404":
          description: Request not found
    put:
      tags:
        - Request
      summary: Update an existing request
      operationId: updateRequest
      parameters:
        - name: requestId
          in: path
          description: The request ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRequest"
      responses:
        "200":
          description: The request was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
    delete:
      tags:
        - Request
      summary: Delete a request
      operationId: deleteRequest
      parameters:
        - name: requestId
          in: path
          description: The request ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: The request was deleted
components:
  schemas:
    Request:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The request ID
          example: 123e4567-e89b-12d3-a456-426614174000
        videoId:
          type: string
          format: uuid
          description: The video ID
          example: 123e4567-e89b-12d3-a456-426614174000
        time:
          type: integer
          description: The time the request was made in milliseconds
          example: 1000
        requestBy:
          type: string
          format: uuid
          description: The user ID that made the request
          example: 123e4567-e89b-12d3-a456-426614174000
        description:
          type: string
          description: The request description
          example: Request Description
        createdAt:
          type: string
          format: date-time
          description: The date and time the user was created
          example: 2021-06-01T10:00:00Z
        updatedAt:
          type: string
          format: date-time
          description: The date and time the user was updated
          example: 2021-06-01T10:00:00Z
        deletedAt:
          type: string
          format: date-time
          description: The date and time the user was deleted
          example: 2021-06-01T10:00:00Z
    CreateRequest:
      type: object
      properties:
        videoId:
          type: string
          format: uuid
          description: The video ID
          example: 123e4567-e89b-12d3-a456-426614174000
        time:
          type: integer
          description: The time the request was made in milliseconds
          example: 1000
        requestBy:
          type: string
          format: uuid
          description: The user ID that made the request
          example: 123e4567-e89b-12d3-a456-426614174000
        description:
          type: string
          description: The request description
          example: Request Description
      required:
        - videoId
        - time
        - requestBy
        - description
    UpdateRequest:
      type: object
      properties:
        videoId:
          type: string
          format: uuid
          description: The video ID
          example: 123e4567-e89b-12d3-a456-426614174000
        time:
          type: integer
          description: The time the request was made in milliseconds
          example: 1000
        requestBy:
          type: string
          format: uuid
          description: The user ID that made the request
          example: 123e4567-e89b-12d3-a456-426614174000
        description:
          type: string
          description: The request description
          example: Request Description
