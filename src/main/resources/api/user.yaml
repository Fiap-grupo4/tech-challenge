openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: API for managing users
  contact:
    name: Gabriel Arrighi Silva
    email: gasilva912@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Local server
  - url: https://api.fiap.com.br/user
    description: Production server
tags:
  - name: User
    description: Operations related to users
paths:
  /user:
    get:
      tags:
        - User
      summary: List all users
      operationId: listUsers
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - User
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: The user was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /user/{userId}:
    put:
      tags:
        - User
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: The user ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        "200":
          description: The user was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      tags:
        - User
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: The user ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: The user was deleted
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The user ID
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          maxLength: 255
          description: The user name
          example: John Doe
        email:
          type: string
          format: email
          maxLength: 255
          description: The user email
          example: user@email.com
        createdAt:
          type: string
          format: date-time
          description: The date and time the user was created
          example: 2021-06-01T10:00:00Z
        updatedAt:
          type: string
          format: date-time
          description: The date and time the user was updated
          example: 2021-06-01T10:00:00Z
        deletedAt:
          type: string
          format: date-time
          description: The date and time the user was deleted
          example: 2021-06-01T10:00:00Z
    CreateUser:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          description: The user name
          example: John Doe
        email:
          type: string
          format: email
          description: The user email
          maxLength: 255
          example: user@email.com
        password:
          type: string
          format: password
          description: The user password
          maxLength: 255
          example: password
      required:
        - name
        - email
        - password
    UpdateUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The user ID
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          maxLength: 255
          description: The user name
          example: John Doe
        password:
          type: string
          format: password
          description: The user password
          maxLength: 255
          example: password
